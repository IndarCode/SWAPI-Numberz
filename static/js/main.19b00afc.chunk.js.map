{"version":3,"sources":["component/Films.js","component/Planets.js","component/Vehicles.js","component/Starships.js","component/People.js","serviceWorker.js","index.js"],"names":["Films","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","films","_this2","fetch","then","response","json","data","setState","results","react_default","a","createElement","className","map","film","key","id","title","opening_crawl","episode_id","director","url","release_date","producer","Component","Planets","planets","planet","name","terrain","rotation_period","diameter","gravity","orbital_period","climate","population","Vehicles","vehicles","vehi","model","passengers","max_atmosphering_speed","manufacturer","cargo_capacity","cost_in_credits","Starships","starships","starship","consumables","starship_class","People","people","peo","gender","height","eye_color","birth_year","hair_color","Boolean","window","location","hostname","match","Home","ReactDOM","render","Fragment","BrowserRouter","class","NavLink","to","exact","activeClassName","Route","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19b00afc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Films extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    films : []\r\n  }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    // Fetch API\r\n    fetch('https://swapi.co/api/films/')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      this.setState({\r\n        films : data.results\r\n      })\r\n      })\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n      <ul>\r\n      { this.state.films.map(function(film){\r\n        return <li key={film.id}>{film.title}\r\n<div className=\"block\">\r\n<div className=\"row\">\r\n  <p><span>Opening Crawl: </span>{film.opening_crawl}</p>\r\n</div>\r\n<div className=\"col\">\r\n<ul>\r\n  <li><span>Episode: </span>{film.episode_id}</li>\r\n  <li><span>Director: </span>{film.director}</li>\r\n  <li><span>URL: </span>{film.url}</li>\r\n</ul>\r\n</div>\r\n<div className=\"col\">\r\n<ul>\r\n  <li><span>Release Date: </span>{film.release_date}</li>\r\n  <li><span>Producer: </span>{film.producer}</li>\r\n</ul>\r\n</div>\r\n\r\n</div>\r\n        </li>\r\n      })\r\n    }\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Planets extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    planets : []\r\n  }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    // Fetch API\r\n    fetch('https://swapi.co/api/planets/')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      this.setState({\r\n        planets : data.results\r\n      })\r\n      })\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n      <ul>\r\n      { this.state.planets.map(function(planet){\r\n        return <li key={planet.name}>{planet.name}\r\n\r\n        <div className=\"block\">\r\n        <div className=\"row\">\r\n          <p><span>Terrain: </span>{planet.terrain}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Rotation Period: </span>{planet.rotation_period}</li>\r\n          <li><span>Diameter: </span>{planet.diameter}</li>\r\n          <li><span>Gravity: </span>{planet.gravity}</li>\r\n        </ul>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Orbital Period: </span>{planet.orbital_period}</li>\r\n          <li><span>Climate: </span>{planet.climate}</li>\r\n          <li><span>Population: </span>{planet.population}</li>\r\n        </ul>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n        </li>\r\n      })\r\n    }\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Vehicles extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    vehicles : []\r\n  }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    // Fetch API\r\n    fetch('https://swapi.co/api/vehicles/')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      this.setState({\r\n        vehicles : data.results\r\n      })\r\n      })\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n      <ul>\r\n      { this.state.vehicles.map(function(vehi){\r\n        return <li key={vehi.name}>{vehi.name}\r\n\r\n        <div className=\"block\">\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Model: </span>{vehi.model}</li>\r\n          <li><span>Passengers: </span>{vehi.passengers}</li>\r\n          <li><span>Max Atmosphering Speed: </span>{vehi.max_atmosphering_speed}</li>\r\n        </ul>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Manufacturer: </span>{vehi.manufacturer}</li>\r\n          <li><span>Cargo Capacity: </span>{vehi.cargo_capacity}</li>\r\n          <li><span>Cost: </span>{vehi.cost_in_credits}</li>\r\n        </ul>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </li>\r\n      })\r\n    }\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Starships extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    starships : []\r\n  }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    // Fetch API\r\n    fetch('https://swapi.co/api/starships/')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      this.setState({\r\n        starships : data.results\r\n      })\r\n      })\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n      <ul>\r\n      { this.state.starships.map(function(starship){\r\n        return <li key={starship.name}>{starship.name}\r\n\r\n        <div className=\"block\">\r\n        <div className=\"row\">\r\n          <p><span>Manufacturer: </span>{starship.manufacturer}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Model: </span>{starship.model}</li>\r\n          <li><span>Passengers: </span>{starship.passengers}</li>\r\n          <li><span>Consumables: </span>{starship.consumables}</li>\r\n        </ul>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Cost: </span>{starship.cost_in_credits}</li>\r\n          <li><span>Cargo: </span>{starship.cargo_capacity}</li>\r\n          <li><span>Starship class: </span>{starship.starship_class}</li>\r\n        </ul>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        </li>\r\n      })\r\n    }\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class People extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    people : []\r\n  }\r\n}\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    // Fetch API\r\n    fetch('https://swapi.co/api/people/')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      this.setState({\r\n        people : data.results\r\n      })\r\n      })\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n      <ul>\r\n      { this.state.people.map(function(peo){\r\n        return <li key={peo.name}>{peo.name}\r\n        <div className=\"block\">\r\n\r\n        <div className=\"col\">\r\n        <ul>\r\n         <li><span>Gender </span>{peo.gender}</li>\r\n          <li><span>Height: </span>{peo.height}</li>\r\n          <li><span>Eye Color: </span>{peo.eye_color}</li>\r\n\r\n        </ul>\r\n        </div>\r\n        <div className=\"col\">\r\n        <ul>\r\n          <li><span>Birth Year: </span>{peo.birth_year}</li>\r\n            <li><span>Hair Color: </span>{peo.hair_color}</li>\r\n        </ul>\r\n        </div>\r\n\r\n        </div>\r\n        </li>\r\n      })\r\n    }\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport './index.css';\n\n\nimport Films from './component/Films';\nimport Planets from './component/Planets';\nimport Vehicles from './component/Vehicles';\nimport Starships from './component/Starships';\nimport People from './component/People';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nfunction BasicExample() {\n  return (\n    <React.Fragment>\n\n    <Router>\n      <div>\n        <ul class=\"nav\">\n          <li>\n            <NavLink to=\"/\" exact={true} activeClassName=\"selected\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/films\" activeClassName=\"selected\">Films</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/vehicles\" activeClassName=\"selected\">Vehicles</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/starships\" activeClassName=\"selected\">Starships</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/people\" activeClassName=\"selected\">People</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/planets\" activeClassName=\"selected\">Planets</NavLink>\n          </li>\n        </ul>\n\n\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/films\" component={Films} />\n        <Route path=\"/vehicles\" component={Vehicles} />\n        <Route path=\"/planets\" component={Planets} />\n        <Route path=\"/starships\" component={Starships} />\n        <Route path=\"/people\" component={People} />\n\n      </div>\n    </Router>\n    </React.Fragment>\n  );\n}\n\n\nfunction Home() {\n  return (\n    <div className=\"main\">\n  <h1>World of Stars</h1>\n  <h3>Which path do you want to take to come inside??</h3>\n  <span className=\"sticky\">Always pass on what you have learned.</span>\n\n  </div>\n);\n}\n\n\n\n\n\n\nReactDOM.render(<BasicExample />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}